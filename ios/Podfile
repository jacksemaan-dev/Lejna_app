platform :ios, '13.0'

# Disable CocoaPods analytics
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "Generated.xcconfig must exist. Run 'flutter pub get' first."
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in Generated.xcconfig"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Modern recommended settings
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# ---- Scrub problematic flags & enforce iOS 13.0 ----
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Make sure all pods target iOS 13+
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'

      # Remove any stray '-G' entries from OTHER_CFLAGS (unsupported on iOS clang)
      flags = config.build_settings['OTHER_CFLAGS'] || ['$(inherited)']
      flags = [flags].flatten
      config.build_settings['OTHER_CFLAGS'] = flags.reject { |f| f.to_s.strip == '-G' }
    end
  end
end
