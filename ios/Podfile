platform :ios, '13.0'

# Disable CocoaPods analytics
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "Generated.xcconfig must exist. Run 'flutter pub get' first."
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in Generated.xcconfig"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# ---- Post-install: ensure Flutter build settings + strip rogue -G flags (safe) ----
post_install do |installer|
  # helper to scrub only the bare "-G" token without altering formatting
  scrub = lambda do |config, key|
    val = config.build_settings[key]
    if val.is_a?(String)
      config.build_settings[key] = val.gsub(/(^|\s)-G(\s|$)/, '\1\2')
    elsif val.is_a?(Array)
      config.build_settings[key] = val.reject { |f| f.to_s.strip == '-G' }
    end
  end

  # 1) Pods project (all plugin targets)
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS OTHER_LDFLAGS].each { |k| scrub.call(config, k) }
    end
  end

  # 2) Runner project (your app target)
  require 'xcodeproj'
  runner_proj_path = File.expand_path('../Runner.xcodeproj', __FILE__)
  runner_proj = Xcodeproj::Project.open(runner_proj_path)
  runner_proj.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS OTHER_LDFLAGS].each { |k| scrub.call(config, k) }
    end
  end
  runner_proj.save

  # 3) FINAL PASS: scrub only Pods' Target Support .xcconfig files (NOT ios/Flutter)
  def scrub_file(path)
    text = File.read(path)
    new  = text.gsub(/(^|\s)-G(\s|$)/, '\1\2') # remove -G only; keep whitespace & newlines
    if new != text
      File.open(path, 'w') { |f| f.write(new) }
      puts "scrubbed xcconfig: #{path}"
    end
  end
  Dir.glob(File.expand_path('../Pods/Target Support Files/**/*.xcconfig', __FILE__)).each { |p| scrub_file(p) }
end
