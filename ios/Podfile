platform :ios, '13.0'

# Disable CocoaPods analytics
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "Generated.xcconfig must exist. Run 'flutter pub get' first."
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in Generated.xcconfig"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# ---- Post-install: force-override flags at target level (kills any rogue -G) ----
post_install do |installer|
  # Ensure Flutter sets up its basic settings for all Pods
  installer.pods_project.targets.each do |t|
    flutter_additional_ios_build_settings(t)
  end

  # Helper to set a clean flag list (only $(inherited))
  def force_clean_flags!(config)
    %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS OTHER_LDFLAGS].each do |k|
      config.build_settings[k] = ['$(inherited)']
    end
  end

  # 1) Override on all Pods targets (highest precedence vs .xcconfig)
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |cfg|
      cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      force_clean_flags!(cfg)
    end
  end

  # 2) Override on Runner target as well
  require 'xcodeproj'
  runner_proj_path = File.expand_path('../Runner.xcodeproj', __FILE__)
  runner_proj = Xcodeproj::Project.open(runner_proj_path)
  runner_proj.targets.each do |t|
    t.build_configurations.each do |cfg|
      cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      force_clean_flags!(cfg)
    end
  end
  runner_proj.save
end
