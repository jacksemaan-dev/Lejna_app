workflows:
  ios_debug:
    name: Lejna iOS Debug (no codesign)
    max_build_duration: 60

    environment:
      vars:
        FLUTTER_VERSION: "3.24.3"   # pin a stable version
      xcode: 15.4
      cocoapods: default

    cache:
      cache_paths:
        - ~/.flutter-sdk
        - ~/.pub-cache
        - ~/Library/Caches/CocoaPods

    scripts:
      - name: Install Flutter via shallow git (cached)
        script: |
          #!/bin/sh
          set -e
          SDK_ROOT="$HOME/.flutter-sdk"
          SDK_DIR="$SDK_ROOT/$FLUTTER_VERSION"
          REPO_URL="https://github.com/flutter/flutter"

          mkdir -p "$SDK_ROOT"
          if [ ! -x "$SDK_DIR/bin/flutter" ]; then
            rm -rf "$SDK_DIR.tmp"
            i=1
            while [ $i -le 3 ]; do
              echo "Clone attempt $i/3…"
              if git clone --depth 1 --branch "$FLUTTER_VERSION" "$REPO_URL" "$SDK_DIR.tmp"; then
                mv "$SDK_DIR.tmp" "$SDK_DIR"
                break
              fi
              [ $i -eq 3 ] && { echo "Failed to clone Flutter after 3 attempts"; exit 2; }
              sleep 10; i=$((i+1))
            done
          else
            echo "Flutter $FLUTTER_VERSION already cached at $SDK_DIR"
          fi

          export PATH="$SDK_DIR/bin:$PATH"
          flutter --version
          flutter config --no-analytics
          flutter precache --ios

      - name: Pub get
        script: |
          #!/bin/sh
          set -e
          export PATH="$HOME/.flutter-sdk/$FLUTTER_VERSION/bin:$PATH"
          flutter pub get

      - name: Podfile sanitize + robust pod install (POSIX)
        script: |
          #!/bin/sh
          set -e
          # Ensure CocoaPods CDN line exists at the very top
          if ! grep -q "^source 'https://cdn.cocoapods.org/'" ios/Podfile; then
            printf "source 'https://cdn.cocoapods.org/'\n%s" "$(cat ios/Podfile)" > ios/Podfile
          fi

          # Auto-sanitize Podfile punctuation (curly quotes/dashes/ellipsis)
          sed -i.bak 's/[‘’]/'\''/g; s/[“”]/"/g; s/[–—]/-/g; s/…/.../g' ios/Podfile || true
          rm -f ios/Podfile.bak
          if grep -n "[‘’“”–—…]" ios/Podfile >/dev/null 2>&1; then
            echo "Smart punctuation still present in ios/Podfile."; exit 1
          fi

          cd ios
          ruby -v || true
          pod --version || true
          pod repo update

          pod deintegrate || true
          rm -rf Pods Podfile.lock

          attempts=3; delay=10; i=1
          while [ "$i" -le "$attempts" ]; do
            echo "pod install attempt $i/$attempts…"
            if pod install --repo-update; then
              echo "pod install succeeded on attempt $i"; break
            fi
            if [ "$i" -eq "$attempts" ]; then
              echo "pod install failed after $attempts attempts"; exit 2
            fi
            echo "Retrying in ${delay}s…"; sleep "$delay"; i=$(( i + 1 ))
          done
          cd ..

      - name: Build iOS debug (no codesign)
        script: |
          #!/bin/sh
          set -e
          export PATH="$HOME/.flutter-sdk/$FLUTTER_VERSION/bin:$PATH"
          flutter build ios --debug --no-codesign -v

    artifacts:
      - build/ios/**/*
    triggering:
      events: [ push ]
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
